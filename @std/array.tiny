let __expect_array = func(arr, name, callback) {
    if (typeof(arr) != 'ARRAY') {
        throw('invalid argument: ' + name + '() must provide an array');
    } else {
        callback();
    }
};

let push = func(arr, value) {
    __expect_array(arr, 'push', func() {
        __builtin_push(arr, value)
    });
};

let pop = func(arr) {
    __expect_array(arr, 'pop', func() {
        __builtin_pop(arr);
    });
};

let shift = func(arr) {
    __expect_array(arr, 'shift', func() {
        __builtin_shift(arr);
    });
};

let unshift = func(arr, value) {
    __expect_array(arr, 'unshift', func() {
        __builtin_unshift(arr, value);
    });
};

let slice = func(arr, start, end) {
    __expect_array(arr, 'slice', func() {
        __builtin_slice(arr, start, end);
    });
};

let forEach = func(arr, callback) {
    __builtin_forEach(arr, callback);
};
